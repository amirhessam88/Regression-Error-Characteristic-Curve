[tool.poetry]
name = "rec"
version = "1.0.0"
description = "Regression Error Charactersitics Curve in Python"
license = "Apache-2.0"
authors = [
    "Amirhessam Tahmassebi <admin@amirhessam.com>",
]
maintainers = [
    "Amirhessam Tahmassebi <admin@amirhessam.com>",
]
readme = "README.md"
homepage = "https://www.slickml.com"
repository = "https://github.com/amirhessam88/Regression-Error-Characteristic-Curve"
documentation = "https://www.docs.slickml.com"
keywords = [
    "python",
    "data-science",
    "machine-learning",
]

classifiers = [
    "Development Status :: 1 - Planning",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Natural Language :: English",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
packages = [
    { include = "rec", from = "src" },
]
include = ["src/rec", "*.md"]
exclude = [
    "assets",
    "tests",
    "examples",
]


[tool.poetry.dependencies]
python = ">=3.8,<3.11"

# --- scientific-computing ---
numpy = "^1.23"
pandas = "^1.4"
scipy = "^1.9"
scikit-learn = "^1.1"

# --- visualization ---
matplotlib = "^3.5"
seaborn = "^0.11"


[tool.poetry.dev-dependencies]

# --- package-management ---
pip = "^22.2"

# --- task-management ---
poethepoet = "^0.13"

# --- formatting ---
add-trailing-comma = "^2.2"
isort = "^5.10"
black = "^22.3"
jupyter-black = "^0.3"

# --- linting ---
flake8 = "^5.0"
flake8-commas = "^2.1"
flake8-annotations = "^2.9.1"
mypy = "^0.971"

# --- unit-testing ---
pytest = "^7.1"
pytest-cov = "^3.0"
pytest-mock = "^3.7"
mock = "^4.0"
coverage = "^6.4"
assertpy = "^1.1"

# --- jupyter ---
ipykernel = "^6.13"
jupytext = "^1.14"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


# -- try `poe --help` for options
[tool.poe.tasks]
add-trailing-comma = { cmd = "poetry run add-trailing-comma --exit-zero-even-if-changed src/**/*.py tests/**/*.py", help = "Format code style via add-trailing-comma" }
black = { cmd = "poetry run black --line-length 100 .", help = "Format code style via black" }
isort = { cmd = "poetry run isort --profile black .", help = "Sort imported libraries via isort" }
flake8 = { cmd = "poetry run flake8 --verbose --benchmark --color always --config .flake8 .", help = "Lint code via flake8" }
mypy = { cmd = "poetry run mypy --verbose --config-file mypy.ini .", help = "Lint types via mypy" }
test = { cmd = "poetry run python -m pytest --cov=src --cov-report=term --cov-report=html --cov-report=xml --cov-config=.coveragerc --tb=short -ra -v", help = "Run unit-tests via pytest" }
format = [
    { ref = "add-trailing-comma" },
    { ref = "isort" },
    { ref = "black" },
]
check = [
    { cmd = "poe black --check" },
    { cmd = "poe isort --check-only" },
    { ref = "flake8" },
    { ref = "mypy" },
]
